version: '3.9'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: vertical-veo3-postgres
    environment:
      POSTGRES_USER: veo3user
      POSTGRES_PASSWORD: veo3password
      POSTGRES_DB: vertical_veo3
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - veo3-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U veo3user"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Queue and Caching
  redis:
    image: redis:7-alpine
    container_name: vertical-veo3-redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - veo3-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO for local S3-compatible storage (development)
  minio:
    image: minio/minio:latest
    container_name: vertical-veo3-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - veo3-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: ../infrastructure/docker/backend/Dockerfile
    container_name: vertical-veo3-backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://veo3user:veo3password@postgres:5432/vertical_veo3
      REDIS_URL: redis://redis:6379
      PORT: 3001
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./uploads:/app/uploads
    networks:
      - veo3-network
    command: npm run dev

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: ../infrastructure/docker/frontend/Dockerfile
    container_name: vertical-veo3-frontend
    depends_on:
      - backend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001/api
      NODE_ENV: development
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - veo3-network
    command: npm run dev

  # Nginx Reverse Proxy (Production-like setup)
  nginx:
    image: nginx:alpine
    container_name: vertical-veo3-nginx
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infrastructure/docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./infrastructure/docker/nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - veo3-network
    profiles:
      - production

  # FFmpeg Container (for testing FFmpeg commands)
  ffmpeg:
    image: linuxserver/ffmpeg:latest
    container_name: vertical-veo3-ffmpeg
    volumes:
      - ./uploads:/uploads
      - ./exports:/exports
    networks:
      - veo3-network
    profiles:
      - tools

networks:
  veo3-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  minio_data:
